{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/alexeyzhdanov/Downloads/frontend-exercise-app-translation/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"/Users/alexeyzhdanov/Downloads/frontend-exercise-app-translation/src/components/HeaderPanel/HeaderPanel.js\",\n  _templateObject,\n  _templateObject2,\n  _templateObject3,\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport logo from '../../assets/images/plainid-logo-white.png';\nimport { headerPanelHeight } from '../../styles/commonStyles';\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderPanelContainer = styled.header(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: flex;\\n  background-color: #4b555f;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  position: fixed;\\n  height: \", \";\\n  align-items: center;\\n  z-index: 1;\\n  justify-content: space-between;\\n  padding: 0 0 20px; \\n\"])), headerPanelHeight);\n_c = HeaderPanelContainer;\nconst Logo = styled.img(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  width: auto;\\n  height: 100%;\\n  padding: 7px;\\n\"])));\n_c2 = Logo;\nconst LanguageSelect = styled.select(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  background: transparent;\\n  color: white;\\n  border: 1px solid white;\\n  font-size: 16px;\\n  cursor: pointer;\\n  padding: 7px;\\n  border-radius: 4px;\\n\\n  option {\\n    color: black; /* Ensures the options are visible */\\n  }\\n\\n  &:hover {\\n    background-color: rgba(255, 255, 255, 0.1);\\n  }\\n\"])));\n_c3 = LanguageSelect;\nconst AVAILABLE_LANGUAGES = [{\n  code: 'en-US',\n  label: 'English'\n}, {\n  code: 'es-ES',\n  label: 'Spanish'\n}\n// Add more languages as needed\n];\nexport default function HeaderPanel() {\n  _s();\n  const {\n    i18n\n  } = useTranslation();\n  const handleLanguageChange = event => {\n    const selectedLanguage = event.target.value;\n    i18n.changeLanguage(selectedLanguage);\n  };\n  return /*#__PURE__*/_jsxDEV(HeaderPanelContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      src: logo,\n      alt: 'Logo'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LanguageSelect, {\n      value: i18n.language,\n      onChange: handleLanguageChange,\n      children: AVAILABLE_LANGUAGES.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: lang.code,\n        children: lang.label\n      }, lang.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(HeaderPanel, \"iD7vDB/EPQWin5ATG71yacngHuk=\", false, function () {\n  return [useTranslation];\n});\n_c4 = HeaderPanel;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"HeaderPanelContainer\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"LanguageSelect\");\n$RefreshReg$(_c4, \"HeaderPanel\");","map":{"version":3,"names":["React","styled","logo","headerPanelHeight","useTranslation","jsxDEV","_jsxDEV","HeaderPanelContainer","header","_templateObject","_taggedTemplateLiteral","_c","Logo","img","_templateObject2","_c2","LanguageSelect","select","_templateObject3","_c3","AVAILABLE_LANGUAGES","code","label","HeaderPanel","_s","i18n","handleLanguageChange","event","selectedLanguage","target","value","changeLanguage","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","language","onChange","map","lang","_c4","$RefreshReg$"],"sources":["/Users/alexeyzhdanov/Downloads/frontend-exercise-app-translation/src/components/HeaderPanel/HeaderPanel.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport logo from '../../assets/images/plainid-logo-white.png';\nimport {headerPanelHeight} from '../../styles/commonStyles';\nimport {useTranslation} from \"react-i18next\";\n\nconst HeaderPanelContainer = styled.header`\n  display: flex;\n  background-color: #4b555f;\n  top: 0;\n  left: 0;\n  right: 0;\n  position: fixed;\n  height: ${headerPanelHeight};\n  align-items: center;\n  z-index: 1;\n  justify-content: space-between;\n  padding: 0 0 20px; \n`;\n\nconst Logo = styled.img`\n  width: auto;\n  height: 100%;\n  padding: 7px;\n`;\n\nconst LanguageSelect = styled.select`\n  background: transparent;\n  color: white;\n  border: 1px solid white;\n  font-size: 16px;\n  cursor: pointer;\n  padding: 7px;\n  border-radius: 4px;\n\n  option {\n    color: black; /* Ensures the options are visible */\n  }\n\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.1);\n  }\n`;\n\nconst AVAILABLE_LANGUAGES = [\n    { code: 'en-US', label: 'English' },\n    { code: 'es-ES', label: 'Spanish' },\n    // Add more languages as needed\n];\n\nexport default function HeaderPanel() {\n    const { i18n } = useTranslation();\n\n\n    const handleLanguageChange = (event) => {\n        const selectedLanguage = event.target.value;\n        i18n.changeLanguage(selectedLanguage);\n    };\n    return (\n        <HeaderPanelContainer>\n            <Logo {...{\n                src: logo,\n                alt: 'Logo'\n            }} />\n            <LanguageSelect value={i18n.language} onChange={handleLanguageChange}>\n                {AVAILABLE_LANGUAGES.map((lang) => (\n                    <option key={lang.code} value={lang.code}>\n                        {lang.label}\n                    </option>\n                ))}\n            </LanguageSelect>\n        </HeaderPanelContainer>\n    );\n}\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,4CAA4C;AAC7D,SAAQC,iBAAiB,QAAO,2BAA2B;AAC3D,SAAQC,cAAc,QAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,oBAAoB,GAAGN,MAAM,CAACO,MAAM,CAAAC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,qOAO9BP,iBAAiB,CAK5B;AAACQ,EAAA,GAZIJ,oBAAoB;AAc1B,MAAMK,IAAI,GAAGX,MAAM,CAACY,GAAG,CAAAC,gBAAA,KAAAA,gBAAA,GAAAJ,sBAAA,4DAItB;AAACK,GAAA,GAJIH,IAAI;AAMV,MAAMI,cAAc,GAAGf,MAAM,CAACgB,MAAM,CAAAC,gBAAA,KAAAA,gBAAA,GAAAR,sBAAA,oTAgBnC;AAACS,GAAA,GAhBIH,cAAc;AAkBpB,MAAMI,mBAAmB,GAAG,CACxB;EAAEC,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAU,CAAC,EACnC;EAAED,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAU;AAClC;AAAA,CACH;AAED,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAK,CAAC,GAAGrB,cAAc,CAAC,CAAC;EAGjC,MAAMsB,oBAAoB,GAAIC,KAAK,IAAK;IACpC,MAAMC,gBAAgB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC3CL,IAAI,CAACM,cAAc,CAACH,gBAAgB,CAAC;EACzC,CAAC;EACD,oBACItB,OAAA,CAACC,oBAAoB;IAAAyB,QAAA,gBACjB1B,OAAA,CAACM,IAAI;MACDqB,GAAG,EAAE/B,IAAI;MACTgC,GAAG,EAAE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACLhC,OAAA,CAACU,cAAc;MAACc,KAAK,EAAEL,IAAI,CAACc,QAAS;MAACC,QAAQ,EAAEd,oBAAqB;MAAAM,QAAA,EAChEZ,mBAAmB,CAACqB,GAAG,CAAEC,IAAI,iBAC1BpC,OAAA;QAAwBwB,KAAK,EAAEY,IAAI,CAACrB,IAAK;QAAAW,QAAA,EACpCU,IAAI,CAACpB;MAAK,GADFoB,IAAI,CAACrB,IAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAE/B;AAACd,EAAA,CAvBuBD,WAAW;EAAA,QACdnB,cAAc;AAAA;AAAAuC,GAAA,GADXpB,WAAW;AAAA,IAAAZ,EAAA,EAAAI,GAAA,EAAAI,GAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAjC,EAAA;AAAAiC,YAAA,CAAA7B,GAAA;AAAA6B,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}