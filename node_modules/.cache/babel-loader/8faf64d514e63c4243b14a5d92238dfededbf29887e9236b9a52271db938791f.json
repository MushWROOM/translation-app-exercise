{"ast":null,"code":"import i18n from 'i18next';\nconst loadComponentNamespace = async componentName => {\n  const namespace = componentName;\n  console.log(\"Checking for resource bundle for \".concat(namespace, \" in language \").concat(i18n.language));\n  const bundleExists = i18n.hasResourceBundle(i18n.language, namespace);\n  if (!bundleExists) {\n    console.log(\"Namespace \".concat(namespace, \" not loaded. Loading...\"));\n    await i18n.loadNamespaces(namespace);\n    console.log(\"Namespace \".concat(namespace, \" loaded.\"));\n\n    // Check if the namespace is now available\n    const bundleExistsAfter = i18n.hasResourceBundle(i18n.language, namespace);\n    console.log(\"Namespace \".concat(namespace, \" loaded and available: \").concat(bundleExistsAfter));\n  } else {\n    console.log(\"Namespace \".concat(namespace, \" already loaded.\"));\n  }\n};\nexport const TranslationUtils = {\n  loadComponentNamespace: loadComponentNamespace\n};","map":{"version":3,"names":["i18n","loadComponentNamespace","componentName","namespace","console","log","concat","language","bundleExists","hasResourceBundle","loadNamespaces","bundleExistsAfter","TranslationUtils"],"sources":["/Users/alexeyzhdanov/Downloads/frontend-exercise-app-translation/src/utils/translation/index.js"],"sourcesContent":["import i18n from 'i18next';\n\nconst loadComponentNamespace = async (componentName) => {\n    const namespace = componentName;\n\n    console.log(`Checking for resource bundle for ${namespace} in language ${i18n.language}`);\n    const bundleExists = i18n.hasResourceBundle(i18n.language, namespace);\n\n    if (!bundleExists) {\n        console.log(`Namespace ${namespace} not loaded. Loading...`);\n        await i18n.loadNamespaces(namespace);\n        console.log(`Namespace ${namespace} loaded.`);\n\n        // Check if the namespace is now available\n        const bundleExistsAfter = i18n.hasResourceBundle(i18n.language, namespace);\n        console.log(`Namespace ${namespace} loaded and available: ${bundleExistsAfter}`);\n    } else {\n        console.log(`Namespace ${namespace} already loaded.`);\n    }\n};\n\nexport const TranslationUtils = {\n    loadComponentNamespace: loadComponentNamespace\n}\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAE1B,MAAMC,sBAAsB,GAAG,MAAOC,aAAa,IAAK;EACpD,MAAMC,SAAS,GAAGD,aAAa;EAE/BE,OAAO,CAACC,GAAG,qCAAAC,MAAA,CAAqCH,SAAS,mBAAAG,MAAA,CAAgBN,IAAI,CAACO,QAAQ,CAAE,CAAC;EACzF,MAAMC,YAAY,GAAGR,IAAI,CAACS,iBAAiB,CAACT,IAAI,CAACO,QAAQ,EAAEJ,SAAS,CAAC;EAErE,IAAI,CAACK,YAAY,EAAE;IACfJ,OAAO,CAACC,GAAG,cAAAC,MAAA,CAAcH,SAAS,4BAAyB,CAAC;IAC5D,MAAMH,IAAI,CAACU,cAAc,CAACP,SAAS,CAAC;IACpCC,OAAO,CAACC,GAAG,cAAAC,MAAA,CAAcH,SAAS,aAAU,CAAC;;IAE7C;IACA,MAAMQ,iBAAiB,GAAGX,IAAI,CAACS,iBAAiB,CAACT,IAAI,CAACO,QAAQ,EAAEJ,SAAS,CAAC;IAC1EC,OAAO,CAACC,GAAG,cAAAC,MAAA,CAAcH,SAAS,6BAAAG,MAAA,CAA0BK,iBAAiB,CAAE,CAAC;EACpF,CAAC,MAAM;IACHP,OAAO,CAACC,GAAG,cAAAC,MAAA,CAAcH,SAAS,qBAAkB,CAAC;EACzD;AACJ,CAAC;AAED,OAAO,MAAMS,gBAAgB,GAAG;EAC5BX,sBAAsB,EAAEA;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}