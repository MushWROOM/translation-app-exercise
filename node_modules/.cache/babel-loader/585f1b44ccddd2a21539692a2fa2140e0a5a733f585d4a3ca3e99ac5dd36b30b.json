{"ast":null,"code":"import i18n from 'i18next';\nconst loadComponentNamespace = async componentName => {\n  const namespace = componentName;\n  console.log(\"Loading namespace \".concat(namespace, \" for language \").concat(i18n.language));\n  if (!i18n.hasResourceBundle(i18n.language, namespace)) {\n    console.log(\"Namespace \".concat(namespace, \" not loaded. Loading...\"));\n    await i18n.loadNamespaces(namespace);\n\n    // Log the current resources to see if the namespace has been added\n    console.log('Current i18n resources:', i18n.getDataByLanguage(i18n.language));\n    const bundleExistsAfter = i18n.hasResourceBundle(i18n.language, namespace);\n    console.log(\"Namespace \".concat(namespace, \" loaded and available: \").concat(bundleExistsAfter));\n  } else {\n    console.log(\"Namespace \".concat(namespace, \" already loaded.\"));\n  }\n};\nexport const TranslationUtils = {\n  loadComponentNamespace: loadComponentNamespace\n};","map":{"version":3,"names":["i18n","loadComponentNamespace","componentName","namespace","console","log","concat","language","hasResourceBundle","loadNamespaces","getDataByLanguage","bundleExistsAfter","TranslationUtils"],"sources":["/Users/alexeyzhdanov/Downloads/frontend-exercise-app-translation/src/utils/translation/index.js"],"sourcesContent":["import i18n from 'i18next';\n\nconst loadComponentNamespace = async (componentName) => {\n    const namespace = componentName;\n\n    console.log(`Loading namespace ${namespace} for language ${i18n.language}`);\n\n    if (!i18n.hasResourceBundle(i18n.language, namespace)) {\n        console.log(`Namespace ${namespace} not loaded. Loading...`);\n        await i18n.loadNamespaces(namespace);\n\n        // Log the current resources to see if the namespace has been added\n        console.log('Current i18n resources:', i18n.getDataByLanguage(i18n.language));\n\n        const bundleExistsAfter = i18n.hasResourceBundle(i18n.language, namespace);\n        console.log(`Namespace ${namespace} loaded and available: ${bundleExistsAfter}`);\n    } else {\n        console.log(`Namespace ${namespace} already loaded.`);\n    }\n};\n\nexport const TranslationUtils = {\n    loadComponentNamespace: loadComponentNamespace\n}\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAE1B,MAAMC,sBAAsB,GAAG,MAAOC,aAAa,IAAK;EACpD,MAAMC,SAAS,GAAGD,aAAa;EAE/BE,OAAO,CAACC,GAAG,sBAAAC,MAAA,CAAsBH,SAAS,oBAAAG,MAAA,CAAiBN,IAAI,CAACO,QAAQ,CAAE,CAAC;EAE3E,IAAI,CAACP,IAAI,CAACQ,iBAAiB,CAACR,IAAI,CAACO,QAAQ,EAAEJ,SAAS,CAAC,EAAE;IACnDC,OAAO,CAACC,GAAG,cAAAC,MAAA,CAAcH,SAAS,4BAAyB,CAAC;IAC5D,MAAMH,IAAI,CAACS,cAAc,CAACN,SAAS,CAAC;;IAEpC;IACAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,IAAI,CAACU,iBAAiB,CAACV,IAAI,CAACO,QAAQ,CAAC,CAAC;IAE7E,MAAMI,iBAAiB,GAAGX,IAAI,CAACQ,iBAAiB,CAACR,IAAI,CAACO,QAAQ,EAAEJ,SAAS,CAAC;IAC1EC,OAAO,CAACC,GAAG,cAAAC,MAAA,CAAcH,SAAS,6BAAAG,MAAA,CAA0BK,iBAAiB,CAAE,CAAC;EACpF,CAAC,MAAM;IACHP,OAAO,CAACC,GAAG,cAAAC,MAAA,CAAcH,SAAS,qBAAkB,CAAC;EACzD;AACJ,CAAC;AAED,OAAO,MAAMS,gBAAgB,GAAG;EAC5BX,sBAAsB,EAAEA;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}